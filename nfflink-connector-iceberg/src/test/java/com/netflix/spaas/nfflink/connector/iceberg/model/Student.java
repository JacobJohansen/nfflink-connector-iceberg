/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.netflix.spaas.nfflink.connector.iceberg.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Student extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4279400420290676914L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Student\",\"namespace\":\"com.netflix.spaas.nfflink.connector.iceberg.model\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"married\",\"type\":\"boolean\"},{\"name\":\"average\",\"type\":\"float\"},{\"name\":\"max\",\"type\":\"double\"},{\"name\":\"comment\",\"type\":\"string\"},{\"name\":\"crc32\",\"type\":\"bytes\"},{\"name\":\"signature\",\"type\":{\"type\":\"fixed\",\"name\":\"MD5\",\"size\":16}},{\"name\":\"suit\",\"type\":{\"type\":\"enum\",\"name\":\"Suit\",\"symbols\":[\"SPADES\",\"HEARTS\",\"DIAMONDS\",\"CLUBS\"]}},{\"name\":\"scores\",\"type\":{\"type\":\"array\",\"items\":\"int\"}},{\"name\":\"friends\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"map\",\"values\":\"string\"}}},{\"name\":\"courses\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Course\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int\"}]}}},{\"name\":\"contact\",\"type\":{\"type\":\"record\",\"name\":\"Contact\",\"fields\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"phone\",\"type\":\"string\"}]}},{\"name\":\"tags\",\"type\":{\"type\":\"map\",\"values\":\"string\"}},{\"name\":\"classes\",\"type\":[\"null\",{\"type\":\"array\",\"items\":[\"null\",\"string\"]}],\"default\":null},{\"name\":\"alias\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Student> ENCODER =
      new BinaryMessageEncoder<Student>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Student> DECODER =
      new BinaryMessageDecoder<Student>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Student> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Student> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Student>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Student to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Student from a ByteBuffer. */
  public static Student fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public long id;
  @Deprecated public int age;
  @Deprecated public boolean married;
  @Deprecated public float average;
  @Deprecated public double max;
  @Deprecated public java.lang.CharSequence comment;
  @Deprecated public java.nio.ByteBuffer crc32;
  @Deprecated public com.netflix.spaas.nfflink.connector.iceberg.model.MD5 signature;
  @Deprecated public com.netflix.spaas.nfflink.connector.iceberg.model.Suit suit;
  @Deprecated public java.util.List<java.lang.Integer> scores;
  @Deprecated public java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> friends;
  @Deprecated public java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> courses;
  @Deprecated public com.netflix.spaas.nfflink.connector.iceberg.model.Contact contact;
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tags;
  @Deprecated public java.util.List<java.lang.CharSequence> classes;
  @Deprecated public java.lang.CharSequence alias;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Student() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param age The new value for age
   * @param married The new value for married
   * @param average The new value for average
   * @param max The new value for max
   * @param comment The new value for comment
   * @param crc32 The new value for crc32
   * @param signature The new value for signature
   * @param suit The new value for suit
   * @param scores The new value for scores
   * @param friends The new value for friends
   * @param courses The new value for courses
   * @param contact The new value for contact
   * @param tags The new value for tags
   * @param classes The new value for classes
   * @param alias The new value for alias
   */
  public Student(java.lang.Long id, java.lang.Integer age, java.lang.Boolean married, java.lang.Float average, java.lang.Double max, java.lang.CharSequence comment, java.nio.ByteBuffer crc32, com.netflix.spaas.nfflink.connector.iceberg.model.MD5 signature, com.netflix.spaas.nfflink.connector.iceberg.model.Suit suit, java.util.List<java.lang.Integer> scores, java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> friends, java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> courses, com.netflix.spaas.nfflink.connector.iceberg.model.Contact contact, java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tags, java.util.List<java.lang.CharSequence> classes, java.lang.CharSequence alias) {
    this.id = id;
    this.age = age;
    this.married = married;
    this.average = average;
    this.max = max;
    this.comment = comment;
    this.crc32 = crc32;
    this.signature = signature;
    this.suit = suit;
    this.scores = scores;
    this.friends = friends;
    this.courses = courses;
    this.contact = contact;
    this.tags = tags;
    this.classes = classes;
    this.alias = alias;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return age;
    case 2: return married;
    case 3: return average;
    case 4: return max;
    case 5: return comment;
    case 6: return crc32;
    case 7: return signature;
    case 8: return suit;
    case 9: return scores;
    case 10: return friends;
    case 11: return courses;
    case 12: return contact;
    case 13: return tags;
    case 14: return classes;
    case 15: return alias;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: age = (java.lang.Integer)value$; break;
    case 2: married = (java.lang.Boolean)value$; break;
    case 3: average = (java.lang.Float)value$; break;
    case 4: max = (java.lang.Double)value$; break;
    case 5: comment = (java.lang.CharSequence)value$; break;
    case 6: crc32 = (java.nio.ByteBuffer)value$; break;
    case 7: signature = (com.netflix.spaas.nfflink.connector.iceberg.model.MD5)value$; break;
    case 8: suit = (com.netflix.spaas.nfflink.connector.iceberg.model.Suit)value$; break;
    case 9: scores = (java.util.List<java.lang.Integer>)value$; break;
    case 10: friends = (java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>>)value$; break;
    case 11: courses = (java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course>)value$; break;
    case 12: contact = (com.netflix.spaas.nfflink.connector.iceberg.model.Contact)value$; break;
    case 13: tags = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    case 14: classes = (java.util.List<java.lang.CharSequence>)value$; break;
    case 15: alias = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'age' field.
   * @return The value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'married' field.
   * @return The value of the 'married' field.
   */
  public java.lang.Boolean getMarried() {
    return married;
  }

  /**
   * Sets the value of the 'married' field.
   * @param value the value to set.
   */
  public void setMarried(java.lang.Boolean value) {
    this.married = value;
  }

  /**
   * Gets the value of the 'average' field.
   * @return The value of the 'average' field.
   */
  public java.lang.Float getAverage() {
    return average;
  }

  /**
   * Sets the value of the 'average' field.
   * @param value the value to set.
   */
  public void setAverage(java.lang.Float value) {
    this.average = value;
  }

  /**
   * Gets the value of the 'max' field.
   * @return The value of the 'max' field.
   */
  public java.lang.Double getMax() {
    return max;
  }

  /**
   * Sets the value of the 'max' field.
   * @param value the value to set.
   */
  public void setMax(java.lang.Double value) {
    this.max = value;
  }

  /**
   * Gets the value of the 'comment' field.
   * @return The value of the 'comment' field.
   */
  public java.lang.CharSequence getComment() {
    return comment;
  }

  /**
   * Sets the value of the 'comment' field.
   * @param value the value to set.
   */
  public void setComment(java.lang.CharSequence value) {
    this.comment = value;
  }

  /**
   * Gets the value of the 'crc32' field.
   * @return The value of the 'crc32' field.
   */
  public java.nio.ByteBuffer getCrc32() {
    return crc32;
  }

  /**
   * Sets the value of the 'crc32' field.
   * @param value the value to set.
   */
  public void setCrc32(java.nio.ByteBuffer value) {
    this.crc32 = value;
  }

  /**
   * Gets the value of the 'signature' field.
   * @return The value of the 'signature' field.
   */
  public com.netflix.spaas.nfflink.connector.iceberg.model.MD5 getSignature() {
    return signature;
  }

  /**
   * Sets the value of the 'signature' field.
   * @param value the value to set.
   */
  public void setSignature(com.netflix.spaas.nfflink.connector.iceberg.model.MD5 value) {
    this.signature = value;
  }

  /**
   * Gets the value of the 'suit' field.
   * @return The value of the 'suit' field.
   */
  public com.netflix.spaas.nfflink.connector.iceberg.model.Suit getSuit() {
    return suit;
  }

  /**
   * Sets the value of the 'suit' field.
   * @param value the value to set.
   */
  public void setSuit(com.netflix.spaas.nfflink.connector.iceberg.model.Suit value) {
    this.suit = value;
  }

  /**
   * Gets the value of the 'scores' field.
   * @return The value of the 'scores' field.
   */
  public java.util.List<java.lang.Integer> getScores() {
    return scores;
  }

  /**
   * Sets the value of the 'scores' field.
   * @param value the value to set.
   */
  public void setScores(java.util.List<java.lang.Integer> value) {
    this.scores = value;
  }

  /**
   * Gets the value of the 'friends' field.
   * @return The value of the 'friends' field.
   */
  public java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> getFriends() {
    return friends;
  }

  /**
   * Sets the value of the 'friends' field.
   * @param value the value to set.
   */
  public void setFriends(java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> value) {
    this.friends = value;
  }

  /**
   * Gets the value of the 'courses' field.
   * @return The value of the 'courses' field.
   */
  public java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> getCourses() {
    return courses;
  }

  /**
   * Sets the value of the 'courses' field.
   * @param value the value to set.
   */
  public void setCourses(java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> value) {
    this.courses = value;
  }

  /**
   * Gets the value of the 'contact' field.
   * @return The value of the 'contact' field.
   */
  public com.netflix.spaas.nfflink.connector.iceberg.model.Contact getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * @param value the value to set.
   */
  public void setContact(com.netflix.spaas.nfflink.connector.iceberg.model.Contact value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'tags' field.
   * @return The value of the 'tags' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getTags() {
    return tags;
  }

  /**
   * Sets the value of the 'tags' field.
   * @param value the value to set.
   */
  public void setTags(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.tags = value;
  }

  /**
   * Gets the value of the 'classes' field.
   * @return The value of the 'classes' field.
   */
  public java.util.List<java.lang.CharSequence> getClasses() {
    return classes;
  }

  /**
   * Sets the value of the 'classes' field.
   * @param value the value to set.
   */
  public void setClasses(java.util.List<java.lang.CharSequence> value) {
    this.classes = value;
  }

  /**
   * Gets the value of the 'alias' field.
   * @return The value of the 'alias' field.
   */
  public java.lang.CharSequence getAlias() {
    return alias;
  }

  /**
   * Sets the value of the 'alias' field.
   * @param value the value to set.
   */
  public void setAlias(java.lang.CharSequence value) {
    this.alias = value;
  }

  /**
   * Creates a new Student RecordBuilder.
   * @return A new Student RecordBuilder
   */
  public static com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder newBuilder() {
    return new com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder();
  }

  /**
   * Creates a new Student RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Student RecordBuilder
   */
  public static com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder newBuilder(com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder other) {
    return new com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder(other);
  }

  /**
   * Creates a new Student RecordBuilder by copying an existing Student instance.
   * @param other The existing instance to copy.
   * @return A new Student RecordBuilder
   */
  public static com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder newBuilder(com.netflix.spaas.nfflink.connector.iceberg.model.Student other) {
    return new com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder(other);
  }

  /**
   * RecordBuilder for Student instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Student>
    implements org.apache.avro.data.RecordBuilder<Student> {

    private long id;
    private int age;
    private boolean married;
    private float average;
    private double max;
    private java.lang.CharSequence comment;
    private java.nio.ByteBuffer crc32;
    private com.netflix.spaas.nfflink.connector.iceberg.model.MD5 signature;
    private com.netflix.spaas.nfflink.connector.iceberg.model.Suit suit;
    private java.util.List<java.lang.Integer> scores;
    private java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> friends;
    private java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> courses;
    private com.netflix.spaas.nfflink.connector.iceberg.model.Contact contact;
    private com.netflix.spaas.nfflink.connector.iceberg.model.Contact.Builder contactBuilder;
    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> tags;
    private java.util.List<java.lang.CharSequence> classes;
    private java.lang.CharSequence alias;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.married)) {
        this.married = data().deepCopy(fields()[2].schema(), other.married);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.average)) {
        this.average = data().deepCopy(fields()[3].schema(), other.average);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.max)) {
        this.max = data().deepCopy(fields()[4].schema(), other.max);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.comment)) {
        this.comment = data().deepCopy(fields()[5].schema(), other.comment);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.crc32)) {
        this.crc32 = data().deepCopy(fields()[6].schema(), other.crc32);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.signature)) {
        this.signature = data().deepCopy(fields()[7].schema(), other.signature);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.suit)) {
        this.suit = data().deepCopy(fields()[8].schema(), other.suit);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.scores)) {
        this.scores = data().deepCopy(fields()[9].schema(), other.scores);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.friends)) {
        this.friends = data().deepCopy(fields()[10].schema(), other.friends);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.courses)) {
        this.courses = data().deepCopy(fields()[11].schema(), other.courses);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.contact)) {
        this.contact = data().deepCopy(fields()[12].schema(), other.contact);
        fieldSetFlags()[12] = true;
      }
      if (other.hasContactBuilder()) {
        this.contactBuilder = com.netflix.spaas.nfflink.connector.iceberg.model.Contact.newBuilder(other.getContactBuilder());
      }
      if (isValidValue(fields()[13], other.tags)) {
        this.tags = data().deepCopy(fields()[13].schema(), other.tags);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.classes)) {
        this.classes = data().deepCopy(fields()[14].schema(), other.classes);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.alias)) {
        this.alias = data().deepCopy(fields()[15].schema(), other.alias);
        fieldSetFlags()[15] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Student instance
     * @param other The existing instance to copy.
     */
    private Builder(com.netflix.spaas.nfflink.connector.iceberg.model.Student other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.age)) {
        this.age = data().deepCopy(fields()[1].schema(), other.age);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.married)) {
        this.married = data().deepCopy(fields()[2].schema(), other.married);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.average)) {
        this.average = data().deepCopy(fields()[3].schema(), other.average);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.max)) {
        this.max = data().deepCopy(fields()[4].schema(), other.max);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.comment)) {
        this.comment = data().deepCopy(fields()[5].schema(), other.comment);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.crc32)) {
        this.crc32 = data().deepCopy(fields()[6].schema(), other.crc32);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.signature)) {
        this.signature = data().deepCopy(fields()[7].schema(), other.signature);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.suit)) {
        this.suit = data().deepCopy(fields()[8].schema(), other.suit);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.scores)) {
        this.scores = data().deepCopy(fields()[9].schema(), other.scores);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.friends)) {
        this.friends = data().deepCopy(fields()[10].schema(), other.friends);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.courses)) {
        this.courses = data().deepCopy(fields()[11].schema(), other.courses);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.contact)) {
        this.contact = data().deepCopy(fields()[12].schema(), other.contact);
        fieldSetFlags()[12] = true;
      }
      this.contactBuilder = null;
      if (isValidValue(fields()[13], other.tags)) {
        this.tags = data().deepCopy(fields()[13].schema(), other.tags);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.classes)) {
        this.classes = data().deepCopy(fields()[14].schema(), other.classes);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.alias)) {
        this.alias = data().deepCopy(fields()[15].schema(), other.alias);
        fieldSetFlags()[15] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setAge(int value) {
      validate(fields()[1], value);
      this.age = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearAge() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'married' field.
      * @return The value.
      */
    public java.lang.Boolean getMarried() {
      return married;
    }

    /**
      * Sets the value of the 'married' field.
      * @param value The value of 'married'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setMarried(boolean value) {
      validate(fields()[2], value);
      this.married = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'married' field has been set.
      * @return True if the 'married' field has been set, false otherwise.
      */
    public boolean hasMarried() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'married' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearMarried() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'average' field.
      * @return The value.
      */
    public java.lang.Float getAverage() {
      return average;
    }

    /**
      * Sets the value of the 'average' field.
      * @param value The value of 'average'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setAverage(float value) {
      validate(fields()[3], value);
      this.average = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'average' field has been set.
      * @return True if the 'average' field has been set, false otherwise.
      */
    public boolean hasAverage() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'average' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearAverage() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'max' field.
      * @return The value.
      */
    public java.lang.Double getMax() {
      return max;
    }

    /**
      * Sets the value of the 'max' field.
      * @param value The value of 'max'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setMax(double value) {
      validate(fields()[4], value);
      this.max = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'max' field has been set.
      * @return True if the 'max' field has been set, false otherwise.
      */
    public boolean hasMax() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'max' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearMax() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'comment' field.
      * @return The value.
      */
    public java.lang.CharSequence getComment() {
      return comment;
    }

    /**
      * Sets the value of the 'comment' field.
      * @param value The value of 'comment'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setComment(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.comment = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'comment' field has been set.
      * @return True if the 'comment' field has been set, false otherwise.
      */
    public boolean hasComment() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'comment' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearComment() {
      comment = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'crc32' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getCrc32() {
      return crc32;
    }

    /**
      * Sets the value of the 'crc32' field.
      * @param value The value of 'crc32'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setCrc32(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.crc32 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'crc32' field has been set.
      * @return True if the 'crc32' field has been set, false otherwise.
      */
    public boolean hasCrc32() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'crc32' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearCrc32() {
      crc32 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'signature' field.
      * @return The value.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.MD5 getSignature() {
      return signature;
    }

    /**
      * Sets the value of the 'signature' field.
      * @param value The value of 'signature'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setSignature(com.netflix.spaas.nfflink.connector.iceberg.model.MD5 value) {
      validate(fields()[7], value);
      this.signature = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'signature' field has been set.
      * @return True if the 'signature' field has been set, false otherwise.
      */
    public boolean hasSignature() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'signature' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearSignature() {
      signature = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'suit' field.
      * @return The value.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Suit getSuit() {
      return suit;
    }

    /**
      * Sets the value of the 'suit' field.
      * @param value The value of 'suit'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setSuit(com.netflix.spaas.nfflink.connector.iceberg.model.Suit value) {
      validate(fields()[8], value);
      this.suit = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'suit' field has been set.
      * @return True if the 'suit' field has been set, false otherwise.
      */
    public boolean hasSuit() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'suit' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearSuit() {
      suit = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'scores' field.
      * @return The value.
      */
    public java.util.List<java.lang.Integer> getScores() {
      return scores;
    }

    /**
      * Sets the value of the 'scores' field.
      * @param value The value of 'scores'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setScores(java.util.List<java.lang.Integer> value) {
      validate(fields()[9], value);
      this.scores = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'scores' field has been set.
      * @return True if the 'scores' field has been set, false otherwise.
      */
    public boolean hasScores() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'scores' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearScores() {
      scores = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'friends' field.
      * @return The value.
      */
    public java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> getFriends() {
      return friends;
    }

    /**
      * Sets the value of the 'friends' field.
      * @param value The value of 'friends'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setFriends(java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>> value) {
      validate(fields()[10], value);
      this.friends = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'friends' field has been set.
      * @return True if the 'friends' field has been set, false otherwise.
      */
    public boolean hasFriends() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'friends' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearFriends() {
      friends = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'courses' field.
      * @return The value.
      */
    public java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> getCourses() {
      return courses;
    }

    /**
      * Sets the value of the 'courses' field.
      * @param value The value of 'courses'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setCourses(java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course> value) {
      validate(fields()[11], value);
      this.courses = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'courses' field has been set.
      * @return True if the 'courses' field has been set, false otherwise.
      */
    public boolean hasCourses() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'courses' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearCourses() {
      courses = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'contact' field.
      * @return The value.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Contact getContact() {
      return contact;
    }

    /**
      * Sets the value of the 'contact' field.
      * @param value The value of 'contact'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setContact(com.netflix.spaas.nfflink.connector.iceberg.model.Contact value) {
      validate(fields()[12], value);
      this.contactBuilder = null;
      this.contact = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'contact' field has been set.
      * @return True if the 'contact' field has been set, false otherwise.
      */
    public boolean hasContact() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'contact' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Contact.Builder getContactBuilder() {
      if (contactBuilder == null) {
        if (hasContact()) {
          setContactBuilder(com.netflix.spaas.nfflink.connector.iceberg.model.Contact.newBuilder(contact));
        } else {
          setContactBuilder(com.netflix.spaas.nfflink.connector.iceberg.model.Contact.newBuilder());
        }
      }
      return contactBuilder;
    }

    /**
     * Sets the Builder instance for the 'contact' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setContactBuilder(com.netflix.spaas.nfflink.connector.iceberg.model.Contact.Builder value) {
      clearContact();
      contactBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'contact' field has an active Builder instance
     * @return True if the 'contact' field has an active Builder instance
     */
    public boolean hasContactBuilder() {
      return contactBuilder != null;
    }

    /**
      * Clears the value of the 'contact' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearContact() {
      contact = null;
      contactBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'tags' field.
      * @return The value.
      */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getTags() {
      return tags;
    }

    /**
      * Sets the value of the 'tags' field.
      * @param value The value of 'tags'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setTags(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[13], value);
      this.tags = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'tags' field has been set.
      * @return True if the 'tags' field has been set, false otherwise.
      */
    public boolean hasTags() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'tags' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearTags() {
      tags = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'classes' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getClasses() {
      return classes;
    }

    /**
      * Sets the value of the 'classes' field.
      * @param value The value of 'classes'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setClasses(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[14], value);
      this.classes = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'classes' field has been set.
      * @return True if the 'classes' field has been set, false otherwise.
      */
    public boolean hasClasses() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'classes' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearClasses() {
      classes = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'alias' field.
      * @return The value.
      */
    public java.lang.CharSequence getAlias() {
      return alias;
    }

    /**
      * Sets the value of the 'alias' field.
      * @param value The value of 'alias'.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder setAlias(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.alias = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'alias' field has been set.
      * @return True if the 'alias' field has been set, false otherwise.
      */
    public boolean hasAlias() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'alias' field.
      * @return This builder.
      */
    public com.netflix.spaas.nfflink.connector.iceberg.model.Student.Builder clearAlias() {
      alias = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Student build() {
      try {
        Student record = new Student();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.age = fieldSetFlags()[1] ? this.age : (java.lang.Integer) defaultValue(fields()[1]);
        record.married = fieldSetFlags()[2] ? this.married : (java.lang.Boolean) defaultValue(fields()[2]);
        record.average = fieldSetFlags()[3] ? this.average : (java.lang.Float) defaultValue(fields()[3]);
        record.max = fieldSetFlags()[4] ? this.max : (java.lang.Double) defaultValue(fields()[4]);
        record.comment = fieldSetFlags()[5] ? this.comment : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.crc32 = fieldSetFlags()[6] ? this.crc32 : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.signature = fieldSetFlags()[7] ? this.signature : (com.netflix.spaas.nfflink.connector.iceberg.model.MD5) defaultValue(fields()[7]);
        record.suit = fieldSetFlags()[8] ? this.suit : (com.netflix.spaas.nfflink.connector.iceberg.model.Suit) defaultValue(fields()[8]);
        record.scores = fieldSetFlags()[9] ? this.scores : (java.util.List<java.lang.Integer>) defaultValue(fields()[9]);
        record.friends = fieldSetFlags()[10] ? this.friends : (java.util.List<java.util.Map<java.lang.CharSequence,java.lang.CharSequence>>) defaultValue(fields()[10]);
        record.courses = fieldSetFlags()[11] ? this.courses : (java.util.List<com.netflix.spaas.nfflink.connector.iceberg.model.Course>) defaultValue(fields()[11]);
        if (contactBuilder != null) {
          record.contact = this.contactBuilder.build();
        } else {
          record.contact = fieldSetFlags()[12] ? this.contact : (com.netflix.spaas.nfflink.connector.iceberg.model.Contact) defaultValue(fields()[12]);
        }
        record.tags = fieldSetFlags()[13] ? this.tags : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[13]);
        record.classes = fieldSetFlags()[14] ? this.classes : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[14]);
        record.alias = fieldSetFlags()[15] ? this.alias : (java.lang.CharSequence) defaultValue(fields()[15]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Student>
    WRITER$ = (org.apache.avro.io.DatumWriter<Student>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Student>
    READER$ = (org.apache.avro.io.DatumReader<Student>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
